{"version":3,"file":"static/js/68.01315f40.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const Label = styled.label`\n  font-size: large;\n  line-height: 1.5;\n  font-weight: 700;\n`;\n\nexport const Input = styled.input`\n  font-size: 18px;\n  line-height: 1.5;\n  font-weight: 400;\n\n  outline: 1px solid gray;\n  border: none;\n  border-radius: 10px;\n  padding: 5px;\n\n  &:focus {\n    outline: 2px solid yellowgreen;\n  }\n`;\n\nexport const BtnForm = styled.button`\n  font-size: large;\n  line-height: 1.5;\n  font-weight: 700;\n  text-align: center;\n\n  outline: 1px solid gray;\n  border: none;\n  border-radius: 10px;\n  margin-top: 35px;\n  background-color: yellow;\n  transform: scale(1);\n  transition: transform 0.3s cubic-bezier(0.17, 0.67, 0.83, 0.67);\n\n  &:hover {\n    transform: scale(1.1);\n  }\n\n  &:focus {\n    outline: 2px solid yellowgreen;\n  }\n`;\n","export const selectLoading = state => state.contacts.loading;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectAllContacts = state => state.contacts.items;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Form, Label, Input, BtnForm } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operationsContact';\n// import {\n//   useAddContactMutation,\n//   useGetContactsQuery,\n// } from 'redux/contacts/contactSlice';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const [inputName, setInputName] = useState('');\n  const [inputNumber, setInputNumber] = useState('');\n\n  // const { contacts } = useSelector(state => state.contacts);\n  // const dispatch = useDispatch();\n\n  const handleInputChange = ({ target }) => {\n    switch (target.name) {\n      case 'name':\n        setInputName(target.value);\n        break;\n      case 'number':\n        setInputNumber(target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n\n    onSubmit(inputName, inputNumber);\n    // console.log(evt.currentTarget.elements.name.value);\n    // console.log(evt.currentTarget.elements.number.value);\n\n    evt.currentTarget.reset();\n  };\n\n  const onSubmit = (inputName, inputNumber) => {\n    if (contacts.find(contact => contact.name === inputName)) {\n      alert(`${inputName} is already in your phonebook`);\n    } else if (contacts.find(contact => contact.number === inputNumber)) {\n      alert('This number exist in your phonebook');\n    } else {\n      dispatch(\n        addContact({\n          name: inputName,\n          number: inputNumber,\n        })\n      );\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor=\"name\">Name</Label>\n      <Input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleInputChange}\n      />\n      <Label htmlFor=\"number\">Number</Label>\n      <Input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleInputChange}\n      />\n      <BtnForm type=\"submit\">\n        <h3>Add contact</h3>\n      </BtnForm>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  handleSubmit: PropTypes.func,\n  handleInputChange: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 500px;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ItemLi = styled.li`\n  font-size: large;\n  line-height: 1.5;\n  font-weight: 700;\n\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextItem = styled.p`\n  font-size: 18px;\n  line-height: 1.5;\n  font-weight: 400;\n\n  outline: 1px solid gray;\n  border: none;\n  border-radius: 10px;\n  padding: 5px;\n\n  &:hover {\n    outline: 3px solid yellowgreen;\n  }\n`;\n\nexport const BtnDelete = styled.button`\n  font-size: large;\n  line-height: 1.5;\n  font-weight: 700;\n  text-align: center;\n\n  outline: 1px solid gray;\n  border: none;\n  border-radius: 10px;\n  margin-left: auto;\n  background-color: yellowgreen;\n  color: #fff;\n  transform: scale(1);\n  transition: transform 0.3s cubic-bezier(0.17, 0.67, 0.83, 0.67);\n\n  &:hover,\n  :focus {\n    transform: scale(1.1);\n    background-color: #fff;\n    color: yellowgreen;\n  }\n`;\n","import React from 'react';\nimport { List, ItemLi, TextItem, BtnDelete } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectAllContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operationsContact';\n// import {\n//   useGetContactsQuery,\n//   useRemoveContactMutation,\n// } from 'redux/contacts/contactSlice';\n\nexport const ContactList = () => {\n  // const [removeContact, { isLoading }] = useRemoveContactMutation();\n  // const { data: contacts } = useGetContactsQuery();\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n\n  const filter = useSelector(state => state.filter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ItemLi key={id}>\n          <TextItem>\n            {name}: {number}\n          </TextItem>\n          <BtnDelete type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            Remove\n          </BtnDelete>\n        </ItemLi>\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  font-size: large;\n  line-height: 1.5;\n  font-weight: 700;\n  margin-bottom: 15px;\n`;\n\nexport const FilerInput = styled.input`\n  display: block;\n  font-size: 18px;\n  line-height: 1.5;\n  font-weight: 400;\n\n  outline: 1px solid gray;\n  border: none;\n  border-radius: 10px;\n  padding: 5px;\n  margin-bottom: 20px;\n\n  &:focus {\n    outline: 3px solid yellowgreen;\n  }\n`;\n","import React from 'react';\nimport { FilterLabel, FilerInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  return (\n    <>\n      <FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n      <FilerInput\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={evt => dispatch(setFilter(evt.target.value))}\n      />\n    </>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useSelector } from 'react-redux';\n// import { useGetContactsQuery } from 'redux/contacts/contactSlice';\nimport { selectAllContacts } from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  // const { data: contacts, isFetching, error = null } = useGetContactsQuery();\n\n  const contacts = useSelector(selectAllContacts);\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 20,\n        color: '#010101',\n      }}\n    >\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n\n      {contacts && <ContactList />}\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","Label","Input","BtnForm","selectAllContacts","state","contacts","items","ContactForm","dispatch","useDispatch","useSelector","useState","inputName","setInputName","inputNumber","setInputNumber","handleInputChange","target","name","value","onSubmit","find","contact","alert","number","addContact","evt","preventDefault","currentTarget","reset","htmlFor","type","pattern","title","required","onChange","List","ItemLi","TextItem","BtnDelete","ContactList","filter","filteredContacts","toLowerCase","includes","map","id","onClick","deleteContact","FilterLabel","FilerInput","Filter","setFilter","style","display","flexDirection","justifyContent","alignItems","fontSize","color"],"sourceRoot":""}